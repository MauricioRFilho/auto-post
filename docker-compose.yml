version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: auto-post-postgres
    environment:
      POSTGRES_USER: autopost
      POSTGRES_PASSWORD: autopost_dev_pass
      POSTGRES_DB: affiliates
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autopost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: auto-post-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n:latest
    container_name: auto-post-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
    volumes:
      - n8n-data:/home/node/.n8n
      - ./n8n/workflows:/workflows
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend.Dockerfile
    container_name: auto-post-backend
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - DATABASE_URL=postgresql://autopost:autopost_dev_pass@postgres:5432/affiliates
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - N8N_BASE_URL=http://n8n:5678
      - N8N_WEBHOOK_PATH=/webhook/post-produto
      - N8N_CALLBACK_SECRET=dev_callback_secret
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run start:dev

  scraper:
    build:
      context: ./scraper
      dockerfile: ../docker/scraper.Dockerfile
    container_name: auto-post-scraper
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://autopost:autopost_dev_pass@postgres:5432/affiliates
      - PYTHONUNBUFFERED=1
    volumes:
      - ./scraper:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python src/worker.py

  dashboard:
    build:
      context: ./dashboard
      dockerfile: ../docker/dashboard.Dockerfile
    container_name: auto-post-dashboard
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    volumes:
      - ./dashboard:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres-data:
  redis-data:
  n8n-data:
